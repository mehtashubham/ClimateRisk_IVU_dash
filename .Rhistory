gold <- na.omit(gold)
gold <- wilsh["1979-12-31/2017-12-31"]
names(gold) <- "TR"
head(gold, 3)
tail(gold, 3)
gold <- getSymbols("GOLDPMGBD228NLBM", src="FRED", auto.assign=FALSE)
gold <- na.omit(gold)
gold <- wilsh["1979-12-31/2017-12-31"]
names(gold) <- "TR"
head(gold, 3)
tail(gold, 3)
gold <- getSymbols("GOLDPMGBD228NLBM", src="FRED", auto.assign=FALSE)
gold <- na.omit(gold)
gold <- gold["1979-12-31/2017-12-31"]
names(gold) <- "TR"
head(gold, 3)
tail(gold, 3)
> logret_w <- apply.weekly(wilsh,sum)
logret_w <- apply.weekly(wilsh,sum)
round(head(logret_w,3),6)
ret_w <- exp(logret_w)-1
exchange <- getSymbols("DEXJPUS", src="FRED", auto.assign=FALSE)
exchange <- na.omit(exchange)
exchange <- exchange["1979-12-31/2017-12-31"]
names(exchange) <- "TR"
head(exchange, 3)
tail(exchange, 3)
logret_w <- apply.weekly(exchange,sum)
round(head(logret_w,3),6)
download.file("https://github.com/RamiKrispin/coronavirus/raw/master/data/coronavirus.rda", destfile = "cvirus")
load("cvirus")
View(coronavirus)
getwd()
df = read.csv("Preparedness_of_countries_for_a_low-carbon_transition.csv")
View(df)
df = df %>%
dplyr::group_by(Country, Indicator)
library(tidyverse)
df = df %>%
dplyr::group_by(Country, Indicator)
e_charts(Country) %>%
e_map(Indicator) %>%
e_title("Confirmed Cases by Country", left = "center") %>%
e_visual_map() %>%
e_theme("infographic") %>%
e_visual_map_range(selected = list(0,1))
library(echarts4r)
e_charts(Country) %>%
e_map(Indicator) %>%
e_title("Confirmed Cases by Country", left = "center") %>%
e_visual_map() %>%
e_theme("infographic") %>%
e_visual_map_range(selected = list(0,1))
e_charts(country) %>%
e_map(Indicator) %>%
e_title("Confirmed Cases by Country", left = "center") %>%
e_visual_map() %>%
e_theme("infographic") %>%
e_visual_map_range(selected = list(0,1))
df
names(df)
e_charts("Country") %>%
e_map(Indicator) %>%
e_title("Confirmed Cases by Country", left = "center") %>%
e_visual_map() %>%
e_theme("infographic") %>%
e_visual_map_range(selected = list(0,1))
e_charts('Country') %>%
e_map(Indicator) %>%
e_title("Confirmed Cases by Country", left = "center") %>%
e_visual_map() %>%
e_theme("infographic") %>%
e_visual_map_range(selected = list(0,1))
e_charts(Country) %>%
e_map(Indicator) %>%
e_title("Confirmed Cases by Country", left = "center") %>%
e_visual_map() %>%
e_theme("infographic") %>%
e_visual_map_range(selected = list(0,1))
e_charts(df$Country) %>%
e_map(Indicator) %>%
e_title("Confirmed Cases by Country", left = "center") %>%
e_visual_map() %>%
e_theme("infographic") %>%
e_visual_map_range(selected = list(0,1))
df$Country
suppressPackageStartupMessages(c(library(flexdashboard),
library(shinythemes),
library(coronavirus),
library(covid19italy),
library(tidyverse),
library(plotly),
library(maps),
library(leaflet),
library(leafpop),
library(purrr),
library(echarts4r),
library(knitr),
library(DT)))
e_charts(df$Country) %>%
e_map(Indicator) %>%
e_title("Confirmed Cases by Country", left = "center") %>%
e_visual_map() %>%
e_theme("infographic") %>%
e_visual_map_range(selected = list(0,1))
names(df)
table(df)
str(df)
str(coronavirus)
e_charts(Country) %>%
e_map(Indicator) %>%
e_title("Confirmed Cases by Country", left = "center") %>%
e_visual_map() %>%
e_theme("infographic") %>%
e_visual_map_range(selected = list(0,1))
Country
e_charts(df) %>%
e_map(Indicator) %>%
e_title("Confirmed Cases by Country", left = "center") %>%
e_visual_map() %>%
e_theme("infographic") %>%
e_visual_map_range(selected = list(0,1))
e_charts(df) %>%
e_map(F2019) %>%
e_title("Confirmed Cases by Country", left = "center") %>%
e_visual_map() %>%
e_theme("infographic") %>%
e_visual_map_range(selected = list(0,1))
df_exposure = df %>%
filter(Indicator = "Exposure")
df_exposure = df %>%
filter(Indicator == "Exposure")
e_charts(df_exposure) %>%
e_map(F2019) %>%
e_title("Confirmed Cases by Country", left = "center") %>%
e_visual_map() %>%
e_theme("infographic") %>%
e_visual_map_range(selected = list(0,1))
e_charts(df_exposure) %>%
e_map(F2019*200) %>%
e_title("Confirmed Cases by Country", left = "center") %>%
e_visual_map() %>%
e_theme("infographic") %>%
e_visual_map_range(selected = list(0,1))
e_charts(df_exposure) %>%
e_map(F2019) %>%
e_title("Confirmed Cases by Country", left = "center") %>%
e_visual_map() %>%
e_theme("infographic") %>%
e_visual_map_range(selected = list(0,1))
e_charts(df_exposure) %>%
e_map(F2019) %>%
e_title("Confirmed Cases by Country", left = "center") %>%
e_visual_map() %>%
e_theme("infographic")
plot_ly() %>%
add_trace(
type = "choroplethmapbox",
# See how this GeoJSON URL was generated at
# https://plotly-r.com/data-raw/us-states.R
geojson = paste(c(
"https://gist.githubusercontent.com/cpsievert/",
"7cdcb444fb2670bd2767d349379ae886/raw/",
"cf5631bfd2e385891bb0a9788a179d7f023bf6c8/",
"us-states.json"
), collapse = ""),
locations = row.names(state.x77),
z = state.x77[, "Population"] / state.x77[, "Area"],
span = I(0)
) %>%
layout(
mapbox = list(
style = "light",
zoom = 4,
center = list(lon = -98.58, lat = 39.82)
)
) %>%
config(
mapboxAccessToken = Sys.getenv("MAPBOX_TOKEN"),
# Workaround to make sure image download uses full container
# size https://github.com/plotly/plotly.js/pull/3746
toImageButtonOptions = list(
format = "svg",
width = NULL,
height = NULL
)
)
library(tidyverse)
plot_ly() %>%
add_trace(
type = "choroplethmapbox",
# See how this GeoJSON URL was generated at
# https://plotly-r.com/data-raw/us-states.R
geojson = paste(c(
"https://gist.githubusercontent.com/cpsievert/",
"7cdcb444fb2670bd2767d349379ae886/raw/",
"cf5631bfd2e385891bb0a9788a179d7f023bf6c8/",
"us-states.json"
), collapse = ""),
locations = row.names(state.x77),
z = state.x77[, "Population"] / state.x77[, "Area"],
span = I(0)
) %>%
layout(
mapbox = list(
style = "light",
zoom = 4,
center = list(lon = -98.58, lat = 39.82)
)
) %>%
config(
mapboxAccessToken = Sys.getenv("MAPBOX_TOKEN"),
# Workaround to make sure image download uses full container
# size https://github.com/plotly/plotly.js/pull/3746
toImageButtonOptions = list(
format = "svg",
width = NULL,
height = NULL
)
)
library(config)
install.packages("config")
library(config)
plot_ly() %>%
add_trace(
type = "choroplethmapbox",
# See how this GeoJSON URL was generated at
# https://plotly-r.com/data-raw/us-states.R
geojson = paste(c(
"https://gist.githubusercontent.com/cpsievert/",
"7cdcb444fb2670bd2767d349379ae886/raw/",
"cf5631bfd2e385891bb0a9788a179d7f023bf6c8/",
"us-states.json"
), collapse = ""),
locations = row.names(state.x77),
z = state.x77[, "Population"] / state.x77[, "Area"],
span = I(0)
) %>%
layout(
mapbox = list(
style = "light",
zoom = 4,
center = list(lon = -98.58, lat = 39.82)
)
) %>%
config(
mapboxAccessToken = Sys.getenv("MAPBOX_TOKEN"),
# Workaround to make sure image download uses full container
# size https://github.com/plotly/plotly.js/pull/3746
toImageButtonOptions = list(
format = "svg",
width = NULL,
height = NULL
)
)
library(httr)
plot_ly() %>%
add_trace(
type = "choroplethmapbox",
# See how this GeoJSON URL was generated at
# https://plotly-r.com/data-raw/us-states.R
geojson = paste(c(
"https://gist.githubusercontent.com/cpsievert/",
"7cdcb444fb2670bd2767d349379ae886/raw/",
"cf5631bfd2e385891bb0a9788a179d7f023bf6c8/",
"us-states.json"
), collapse = ""),
locations = row.names(state.x77),
z = state.x77[, "Population"] / state.x77[, "Area"],
span = I(0)
) %>%
layout(
mapbox = list(
style = "light",
zoom = 4,
center = list(lon = -98.58, lat = 39.82)
)
) %>%
config(
mapboxAccessToken = Sys.getenv("MAPBOX_TOKEN"),
# Workaround to make sure image download uses full container
# size https://github.com/plotly/plotly.js/pull/3746
toImageButtonOptions = list(
format = "svg",
width = NULL,
height = NULL
)
)
density <- state.x77[, "Population"] / state.x77[, "Area"]
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
lakecolor = toRGB('white')
)
install.packages("Rgb")
library(rgb)
library(Rgb)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
lakecolor = toRGB('white')
)
library(plotly)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
lakecolor = toRGB('white')
)
plot_geo() %>%
add_trace(
z = ~density, text = state.name, span = I(0),
locations = state.abb, locationmode = 'USA-states'
) %>%
layout(geo = g)
g <- list(
scope = 'world',
projection = list(type = 'albers usa'),
lakecolor = toRGB('white')
)
plot_geo() %>%
add_trace(
z = ~density, text = state.name, span = I(0),
locations = state.abb, locationmode = 'USA-states'
) %>%
layout(geo = g)
fig <- plot_ly(df, type='choropleth', locations=df$CODE, z=df$GDP..BILLIONS., text=df$COUNTRY, colorscale="Blues")
fig
df_temp <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv")
df_temp
fig <- plot_ly(df_temp, type='choropleth', locations=df$CODE, z=df$GDP..BILLIONS., text=df$COUNTRY, colorscale="Blues")
fig
# specify map projection/options
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
fig <- plot_geo(df)
fig <- fig %>% add_trace(
z = ~GDP..BILLIONS., color = ~GDP..BILLIONS., colors = 'Blues',
text = ~COUNTRY, locations = ~CODE, marker = list(line = l)
)
df <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv')
# light grey boundaries
l <- list(color = toRGB("grey"), width = 0.5)
# specify map projection/options
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
fig <- plot_geo(df)
fig <- fig %>% add_trace(
z = ~GDP..BILLIONS., color = ~GDP..BILLIONS., colors = 'Blues',
text = ~COUNTRY, locations = ~CODE, marker = list(line = l)
)
fig <- fig %>% colorbar(title = 'GDP Billions US$', tickprefix = '$')
fig <- fig %>% layout(
title = '2014 Global GDP<br>Source:<a href="https://www.cia.gov/library/publications/the-world-factbook/fields/2195.html">CIA World Factbook</a>',
geo = g
)
fig
df = read.csv("Preparedness_of_countries_for_a_low-carbon_transition.csv")
View(df_temp)
fig <- plot_geo(df)
fig <- fig %>% add_trace(
z = ~F2019, color = ~F2019, colors = 'Blues',
text = ~Country,  marker = list(line = l)
)
fig <- fig %>% colorbar(title = 'GDP Billions US$', tickprefix = '$')
fig <- fig %>% layout(
title = '2014 Global GDP<br>Source:<a href="https://www.cia.gov/library/publications/the-world-factbook/fields/2195.html">CIA World Factbook</a>',
geo = g
)
fig
View(df)
View(df_temp)
df = left_join(df, df_temp, by = df$Country)
df_exp = left_join(df_exposure, df_temp, by = df$Country)
View(df_exposure)
View(df_exposure)
df = read.csv("Preparedness_of_countries_for_a_low-carbon_transition.csv")
# light grey boundaries
l <- list(color = toRGB("grey"), width = 0.5)
# specify map projection/options
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
fig <- plot_geo(df_exposure)
fig <- fig %>% add_trace(
z = ~df_exposure$F2019, color = ~df_exposure$F2019, colors = 'Blues',
text = ~df_exposure$Country, locations = ~df_exposure$ISO3, marker = list(line = l)
)
fig <- fig %>% colorbar(title = 'Transition Risk', tickprefix = '$')
fig <- fig %>% layout(
title = 'Transition Risk',
geo = g
)
fig
fig <- fig %>% add_trace(
z = ~df_exposure$F2019, color = ~df_exposure$F2019, colors = 'Red',
text = ~df_exposure$Country, locations = ~df_exposure$ISO3, marker = list(line = l)
)
fig <- fig %>% colorbar(title = 'Transition Risk', tickprefix = '$')
fig <- fig %>% layout(
title = 'Transition Risk',
geo = g
)
fig
fig <- fig %>% add_trace(
z = ~df_exposure$F2019, color = ~df_exposure$F2019, colors = 'Blue',
text = ~df_exposure$Country, locations = ~df_exposure$ISO3, marker = list(line = l)
)
fig <- fig %>% colorbar(title = 'Transition Risk', tickprefix = '$')
fig <- fig %>% layout(
title = 'Transition Risk',
geo = g
)
fig
# specify map projection/options
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
fig <- plot_geo(df_exposure)
fig <- fig %>% add_trace(
z = ~df_exposure$F2019, color = ~df_exposure$F2019, colors = 'Blues',
text = ~df_exposure$Country, locations = ~df_exposure$ISO3, marker = list(line = l)
)
fig <- fig %>% colorbar(title = 'Transition Risk', tickprefix = '$')
fig <- fig %>% layout(
title = 'Transition Risk',
geo = g
)
fig
fig <- fig %>% colorbar(title = 'Transition Risk', tickprefix = 'Index')
fig <- fig %>% layout(
title = 'Exposure to Low-Carbon Economy Transition (Transition Risk)',
geo = g
)
fig
fig <- fig %>% colorbar(title = 'Transition Risk', tickprefix = '')
fig <- fig %>% layout(
title = 'Exposure to Low-Carbon Economy Transition (Transition Risk)',
geo = g
)
fig
fig <- plot_geo(df_exposure)
fig <- fig %>% add_trace(
z = ~df_exposure$F2019, color = ~df_exposure$F2019, colors = 'Blues',
text = ~df_exposure$Country, locations = ~df_exposure$ISO3, marker = list(line = l)
)
fig <- fig %>% colorbar(title = 'Transition Risk Index', tickprefix = '')
fig <- fig %>% layout(
title = 'Exposure to Low-Carbon Economy Transition (Transition Risk)',
geo = g
)
fig
fig <- fig %>% colorbar(title = 'Transition Risk Index; Scale from 0 (high resilience) to 1 (low resilience)', tickprefix = '')
fig <- fig %>% layout(
title = 'Exposure to Low-Carbon Economy Transition (Transition Risk)',
geo = g
)
fig
fig <- plot_geo(df_exposure)
fig <- fig %>% add_trace(
z = ~df_exposure$F2019, color = ~df_exposure$F2019, colors = 'Blues',
text = ~df_exposure$Country, locations = ~df_exposure$ISO3, marker = list(line = l)
)
fig <- fig %>% colorbar(title = 'Transition Risk Index', tickprefix = '')
fig <- fig %>% layout(
title = 'Exposure to Low-Carbon Economy Transition (Transition Risk) ; Scale from 0 (high resilience) to 1 (low resilience)',
geo = g
)
fig
getwd()
setwd("C:/Users/shubh/Documents/ClimateData")
setwd("C:/Users/shubh/Documents/ClimateData")
# Importing data
transition_risk_data = read.csv("Preparedness_of_countries_for_a_low-carbon_transition.csv")
physical_risk_data = read.csv("Climate-driven_INFORM_Risk.csv")
financial_risk_data = read.csv("Carbon_footprint_adjusted_loans_to_total_loans_for_deposit_takers.csv")
View(transition_risk_data)
# Please ensure your data files are in the working directory before running the code
# Importing data
transition_risk_data = read.csv("Preparedness_of_countries_for_a_low-carbon_transition.csv")
physical_risk_data = read.csv("Climate-driven_INFORM_Risk.csv")
financial_risk_data = read.csv("Carbon_footprint_adjusted_loans_to_total_loans_for_deposit_takers.csv")
# Calling packages
suppressPackageStartupMessages(c(library(flexdashboard),
library(shinythemes),
library(tidyverse),
library(plotly),
library(maps),
library(leaflet),
library(leafpop),
library(purrr),
library(knitr),
library(DT)))
# Creating subsets
transition_risk_data = transition_risk_data %>%
dplyr::group_by(Country, Indicator)
transition_risk_data_exposure = transition_risk_data %>%
filter(Indicator == "Exposure")
transition_risk_data_resilience = transition_risk_data %>%
filter(Indicator == "Resilience")
"#6cc71c"
head(physical_risk_data)
View(g)
